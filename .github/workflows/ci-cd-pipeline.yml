name: CI/CD Pipeline
on:
  push:
    branches:
      - main
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install

      - name: Build TypeScript
        run: npm run build

      - name: Build Docker image
        run: docker build -t my-express-app:latest .

      - name: Save Docker image
        run: docker save my-express-app:latest | gzip > my-express-app.tar.gz

      - name: Verify files exist
        run: |
          ls -la
          if [ ! -f "my-express-app.tar.gz" ]; then echo "Error: my-express-app.tar.gz not found"; exit 1; fi
          if [ ! -f "docker-compose.yml" ]; then echo "Error: docker-compose.yml not found"; exit 1; fi
          if [ ! -f "schema.sql" ]; then echo "Error: schema.sql not found"; exit 1; fi

      - name: Copy Docker image to VPS
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: shuhrat
          key: ${{ secrets.VPS_SSH_KEY }}
          source: 'my-express-app.tar.gz'
          target: '/home/shuhrat/app'

      - name: Copy docker-compose.yml to VPS
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: shuhrat
          key: ${{ secrets.VPS_SSH_KEY }}
          source: 'docker-compose.yml'
          target: '/home/shuhrat/app'

      - name: Copy schema.sql to VPS
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: shuhrat
          key: ${{ secrets.VPS_SSH_KEY }}
          source: 'schema.sql'
          target: '/home/shuhrat/app'

      - name: Deploy to VPS
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: shuhrat
          key: ${{ secrets.VPS_SSH_KEY }}
          script: |
            cd /home/shuhrat/app
            gunzip -c my-express-app.tar.gz | docker load
            docker-compose down || true
            docker-compose up -d db
            sleep 10
            cat schema.sql | docker exec -i backend-db-1 psql -U postgres -d crm
            docker-compose up -d